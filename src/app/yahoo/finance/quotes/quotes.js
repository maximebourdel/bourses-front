"use strict";
var Quotes = (function () {
    function Quotes(symbol, Ask, AverageDailyVolume, Bid, AskRealtime, BidRealtime, BookValue, Change_PercentChange, Change, Commission, Currency, ChangeRealtime, AfterHoursChangeRealtime, DividendShare, LastTradeDate, TradeDate, EarningsShare, ErrorIndicationreturnedforsymbolchangedinvalid, EPSEstimateCurrentYear, EPSEstimateNextYear, EPSEstimateNextQuarter, DaysLow, DaysHigh, YearLow, YearHigh, HoldingsGainPercent, AnnualizedGain, HoldingsGain, HoldingsGainPercentRealtime, HoldingsGainRealtime, MoreInfo, OrderBookRealtime, MarketCapitalization, MarketCapRealtime, EBITDA, ChangeFromYearLow, PercentChangeFromYearLow, LastTradeRealtimeWithTime, ChangePercentRealtime, ChangeFromYearHigh, PercebtChangeFromYearHigh, LastTradeWithTime, LastTradePriceOnly, HighLimit, LowLimit, DaysRange, DaysRangeRealtime, FiftydayMovingAverage, TwoHundreddayMovingAverage, ChangeFromTwoHundreddayMovingAverage, PercentChangeFromTwoHundreddayMovingAverage, ChangeFromFiftydayMovingAverage, PercentChangeFromFiftydayMovingAverage, Name, Notes, Open, PreviousClose, PricePaid, ChangeinPercent, PriceSales, PriceBook, ExDividendDate, PERatio, DividendPayDate, PERatioRealtime, PEGRatio, PriceEPSEstimateCurrentYear, PriceEPSEstimateNextYear, Symbol, SharesOwned, ShortRatio, LastTradeTime, TickerTrend, OneyrTargetPrice, Volume, HoldingsValue, HoldingsValueRealtime, YearRange, DaysValueChange, DaysValueChangeRealtime, StockExchange, DividendYield, PercentChange) {
        this.symbol = symbol;
        this.Ask = Ask;
        this.AverageDailyVolume = AverageDailyVolume;
        this.Bid = Bid;
        this.AskRealtime = AskRealtime;
        this.BidRealtime = BidRealtime;
        this.BookValue = BookValue;
        this.Change_PercentChange = Change_PercentChange;
        this.Change = Change;
        this.Commission = Commission;
        this.Currency = Currency;
        this.ChangeRealtime = ChangeRealtime;
        this.AfterHoursChangeRealtime = AfterHoursChangeRealtime;
        this.DividendShare = DividendShare;
        this.LastTradeDate = LastTradeDate;
        this.TradeDate = TradeDate;
        this.EarningsShare = EarningsShare;
        this.ErrorIndicationreturnedforsymbolchangedinvalid = ErrorIndicationreturnedforsymbolchangedinvalid;
        this.EPSEstimateCurrentYear = EPSEstimateCurrentYear;
        this.EPSEstimateNextYear = EPSEstimateNextYear;
        this.EPSEstimateNextQuarter = EPSEstimateNextQuarter;
        this.DaysLow = DaysLow;
        this.DaysHigh = DaysHigh;
        this.YearLow = YearLow;
        this.YearHigh = YearHigh;
        this.HoldingsGainPercent = HoldingsGainPercent;
        this.AnnualizedGain = AnnualizedGain;
        this.HoldingsGain = HoldingsGain;
        this.HoldingsGainPercentRealtime = HoldingsGainPercentRealtime;
        this.HoldingsGainRealtime = HoldingsGainRealtime;
        this.MoreInfo = MoreInfo;
        this.OrderBookRealtime = OrderBookRealtime;
        this.MarketCapitalization = MarketCapitalization;
        this.MarketCapRealtime = MarketCapRealtime;
        this.EBITDA = EBITDA;
        this.ChangeFromYearLow = ChangeFromYearLow;
        this.PercentChangeFromYearLow = PercentChangeFromYearLow;
        this.LastTradeRealtimeWithTime = LastTradeRealtimeWithTime;
        this.ChangePercentRealtime = ChangePercentRealtime;
        this.ChangeFromYearHigh = ChangeFromYearHigh;
        this.PercebtChangeFromYearHigh = PercebtChangeFromYearHigh;
        this.LastTradeWithTime = LastTradeWithTime;
        this.LastTradePriceOnly = LastTradePriceOnly;
        this.HighLimit = HighLimit;
        this.LowLimit = LowLimit;
        this.DaysRange = DaysRange;
        this.DaysRangeRealtime = DaysRangeRealtime;
        this.FiftydayMovingAverage = FiftydayMovingAverage;
        this.TwoHundreddayMovingAverage = TwoHundreddayMovingAverage;
        this.ChangeFromTwoHundreddayMovingAverage = ChangeFromTwoHundreddayMovingAverage;
        this.PercentChangeFromTwoHundreddayMovingAverage = PercentChangeFromTwoHundreddayMovingAverage;
        this.ChangeFromFiftydayMovingAverage = ChangeFromFiftydayMovingAverage;
        this.PercentChangeFromFiftydayMovingAverage = PercentChangeFromFiftydayMovingAverage;
        this.Name = Name;
        this.Notes = Notes;
        this.Open = Open;
        this.PreviousClose = PreviousClose;
        this.PricePaid = PricePaid;
        this.ChangeinPercent = ChangeinPercent;
        this.PriceSales = PriceSales;
        this.PriceBook = PriceBook;
        this.ExDividendDate = ExDividendDate;
        this.PERatio = PERatio;
        this.DividendPayDate = DividendPayDate;
        this.PERatioRealtime = PERatioRealtime;
        this.PEGRatio = PEGRatio;
        this.PriceEPSEstimateCurrentYear = PriceEPSEstimateCurrentYear;
        this.PriceEPSEstimateNextYear = PriceEPSEstimateNextYear;
        this.Symbol = Symbol;
        this.SharesOwned = SharesOwned;
        this.ShortRatio = ShortRatio;
        this.LastTradeTime = LastTradeTime;
        this.TickerTrend = TickerTrend;
        this.OneyrTargetPrice = OneyrTargetPrice;
        this.Volume = Volume;
        this.HoldingsValue = HoldingsValue;
        this.HoldingsValueRealtime = HoldingsValueRealtime;
        this.YearRange = YearRange;
        this.DaysValueChange = DaysValueChange;
        this.DaysValueChangeRealtime = DaysValueChangeRealtime;
        this.StockExchange = StockExchange;
        this.DividendYield = DividendYield;
        this.PercentChange = PercentChange;
    }
    return Quotes;
}());
exports.Quotes = Quotes;
//# sourceMappingURL=quotes.js.map